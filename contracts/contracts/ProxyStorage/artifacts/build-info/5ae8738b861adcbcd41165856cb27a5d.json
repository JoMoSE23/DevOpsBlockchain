{
	"id": "5ae8738b861adcbcd41165856cb27a5d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol": {
				"content": "\npragma solidity ^0.8.18;\n\n//This is the implementation of the normal proxy pattern\n//Used delegate is the Contract 1_Storage.sol provided upfront by remix.ethereum.org\n// calldata: 0x6057361d0000000000000000000000000000000000000000000000000000000000000006\ncontract ProxyPattern{\n\n    \n    //event numberUpdated(uint256 numberOld, uint256 numberNew);\n\n    constructor(address _delegate){\n        bytes32 position = keccak256(\"delegate\");\n            assembly {\n            sstore(position, _delegate)}\n    }\n\n    //variable is accessed via unstructured storage\n    function getNumber() public view returns(uint256 num){\n        bytes32 position = keccak256(\"number\");\n        assembly {\n        num := sload(position)\n      }\n    }\n\n    //variable is accessed via unstructured storage\n    function getDelegate() public view returns(address delegate){\n        bytes32 position = keccak256(\"delegate\");\n        assembly {\n        delegate := sload(position)\n      }\n    }\n\n     function updateDelegate(address _delegate) public{\n        bytes32 position = keccak256(\"delegate\");\n            assembly {\n            sstore(position, _delegate)}\n      \n    }\n\n    //fallback function\n    fallback() external payable{\n        // get facet from function selector\n        address _delegate = getDelegate();\n        require(_delegate != address(0));\n        // Execute external function from facet using delegatecall and return any value.\n        assembly {\n            // copy function selector and any arguments\n            \n            calldatacopy(0x0, 0x0, calldatasize())\n            \n            // execute function call using the facet\n            let result := delegatecall(gas(), _delegate, 0x0, calldatasize(), 0x0, 0x0)\n            // get any return value\n            returndatacopy(0x0, 0x0, returndatasize())\n            // return any return value or error back to the caller\n            switch result\n            case 0 {revert(0x0, returndatasize())}\n            default {return (0x0, returndatasize())}\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol": {
				"ProxyPattern": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_delegate",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "getDelegate",
							"outputs": [
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumber",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "num",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_delegate",
									"type": "address"
								}
							],
							"name": "updateDelegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":257:2028  contract ProxyPattern{... */\n  mstore(0x40, 0x80)\n    /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":356:507  constructor(address _delegate){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":396:412  bytes32 position */\n  0x00\n    /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":415:436  keccak256(\"delegate\") */\n  0x6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec\n    /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":396:436  bytes32 position = keccak256(\"delegate\") */\n  swap1\n  pop\n    /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":490:499  _delegate */\n  dup2\n    /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":480:488  position */\n  dup2\n    /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":473:500  sstore(position, _delegate) */\n  sstore\n    /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":459:501  {... */\n  pop\n    /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":356:507  constructor(address _delegate){... */\n  pop\n    /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":257:2028  contract ProxyPattern{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":257:2028  contract ProxyPattern{... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":257:2028  contract ProxyPattern{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xbc7f3b50\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf2c9ecd8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfe3f9b0e\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n    tag_2:\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1264:1281  address _delegate */\n      0x00\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1284:1297  getDelegate() */\n      tag_8\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1284:1295  getDelegate */\n      tag_9\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1284:1297  getDelegate() */\n      jump\t// in\n    tag_8:\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1264:1297  address _delegate = getDelegate() */\n      swap1\n      pop\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1336:1337  0 */\n      0x00\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1315:1338  _delegate != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1315:1324  _delegate */\n      dup2\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1315:1338  _delegate != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1307:1339  require(_delegate != address(0)) */\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1553:1567  calldatasize() */\n      calldatasize\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1548:1551  0x0 */\n      0x00\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1543:1546  0x0 */\n      dup1\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1530:1568  calldatacopy(0x0, 0x0, calldatasize()) */\n      calldatacopy\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1718:1721  0x0 */\n      0x00\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1713:1716  0x0 */\n      dup1\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1697:1711  calldatasize() */\n      calldatasize\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1692:1695  0x0 */\n      0x00\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1681:1690  _delegate */\n      dup5\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1674:1679  gas() */\n      gas\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1661:1722  delegatecall(gas(), _delegate, 0x0, calldatasize(), 0x0, 0x0) */\n      delegatecall\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1796:1812  returndatasize() */\n      returndatasize\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1791:1794  0x0 */\n      0x00\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1786:1789  0x0 */\n      dup1\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1771:1813  returndatacopy(0x0, 0x0, returndatasize()) */\n      returndatacopy\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1900:1906  result */\n      dup1\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1924:1925  0 */\n      0x00\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1919:1957  case 0 {revert(0x0, returndatasize())} */\n      dup2\n      eq\n      tag_12\n      jumpi\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1992:2008  returndatasize() */\n      returndatasize\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1987:1990  0x0 */\n      0x00\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1979:2009  return (0x0, returndatasize()) */\n      return\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1919:1957  case 0 {revert(0x0, returndatasize())} */\n    tag_12:\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1939:1955  returndatasize() */\n      returndatasize\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1934:1937  0x0 */\n      0x00\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1927:1956  revert(0x0, returndatasize()) */\n      revert\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":789:969  function getDelegate() public view returns(address delegate){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      tag_9\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":565:731  function getNumber() public view returns(uint256 num){... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":976:1153  function updateDelegate(address _delegate) public{... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":789:969  function getDelegate() public view returns(address delegate){... */\n    tag_9:\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":832:848  address delegate */\n      0x00\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":859:875  bytes32 position */\n      dup1\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":878:899  keccak256(\"delegate\") */\n      0x6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":859:899  bytes32 position = keccak256(\"delegate\") */\n      swap1\n      pop\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":946:954  position */\n      dup1\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":940:955  sload(position) */\n      sload\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":928:955  delegate := sload(position) */\n      swap2\n      pop\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":918:963  {... */\n      pop\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":789:969  function getDelegate() public view returns(address delegate){... */\n      swap1\n      jump\t// out\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":565:731  function getNumber() public view returns(uint256 num){... */\n    tag_19:\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":606:617  uint256 num */\n      0x00\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":628:644  bytes32 position */\n      dup1\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":647:666  keccak256(\"number\") */\n      0xf648814c67221440671fd7c2de979db4020a9320fb7985ff79ca8e7dced277f8\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":628:666  bytes32 position = keccak256(\"number\") */\n      swap1\n      pop\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":708:716  position */\n      dup1\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":702:717  sload(position) */\n      sload\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":695:717  num := sload(position) */\n      swap2\n      pop\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":685:725  {... */\n      pop\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":565:731  function getNumber() public view returns(uint256 num){... */\n      swap1\n      jump\t// out\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":976:1153  function updateDelegate(address _delegate) public{... */\n    tag_26:\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1035:1051  bytes32 position */\n      0x00\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1054:1075  keccak256(\"delegate\") */\n      0x6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1035:1075  bytes32 position = keccak256(\"delegate\") */\n      swap1\n      pop\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1129:1138  _delegate */\n      dup2\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1119:1127  position */\n      dup2\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1112:1139  sstore(position, _delegate) */\n      sstore\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":1098:1140  {... */\n      pop\n        /* \"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":976:1153  function updateDelegate(address _delegate) public{... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_30:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_31:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_43\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_30\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_32:\n        /* \"#utility.yul\":328:352   */\n      tag_45\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_31\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_16:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_47\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_32\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_33:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_34:\n        /* \"#utility.yul\":763:787   */\n      tag_50\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_33\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_21:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_52\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_34\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_36:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      dup1\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_38:\n        /* \"#utility.yul\":1428:1452   */\n      tag_57\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_31\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_58\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      dup1\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_58:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1622   */\n    tag_39:\n        /* \"#utility.yul\":1529:1534   */\n      0x00\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1554:1574   */\n      calldataload\n        /* \"#utility.yul\":1545:1574   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1616   */\n      tag_60\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1583:1616   */\n      tag_38\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1483:1622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1628:1957   */\n    tag_25:\n        /* \"#utility.yul\":1687:1693   */\n      0x00\n        /* \"#utility.yul\":1736:1738   */\n      0x20\n        /* \"#utility.yul\":1724:1733   */\n      dup3\n        /* \"#utility.yul\":1715:1722   */\n      dup5\n        /* \"#utility.yul\":1711:1734   */\n      sub\n        /* \"#utility.yul\":1707:1739   */\n      slt\n        /* \"#utility.yul\":1704:1823   */\n      iszero\n      tag_62\n      jumpi\n        /* \"#utility.yul\":1742:1821   */\n      tag_63\n      tag_36\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1704:1823   */\n    tag_62:\n        /* \"#utility.yul\":1862:1863   */\n      0x00\n        /* \"#utility.yul\":1887:1940   */\n      tag_64\n        /* \"#utility.yul\":1932:1939   */\n      dup5\n        /* \"#utility.yul\":1923:1929   */\n      dup3\n        /* \"#utility.yul\":1912:1921   */\n      dup6\n        /* \"#utility.yul\":1908:1930   */\n      add\n        /* \"#utility.yul\":1887:1940   */\n      tag_39\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1877:1940   */\n      swap2\n      pop\n        /* \"#utility.yul\":1833:1950   */\n      pop\n        /* \"#utility.yul\":1628:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204d8423e4dca486c2c73aacbe43202ca17b2b3e52651c28d12e69a0903e91622f64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_14": {
									"entryPoint": null,
									"id": 14,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 97,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516103cf3803806103cf833981810160405281019061003291906100c4565b60007f6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec905081815550506100f1565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009182610066565b9050919050565b6100a181610086565b81146100ac57600080fd5b50565b6000815190506100be81610098565b92915050565b6000602082840312156100da576100d9610061565b5b60006100e8848285016100af565b91505092915050565b6102cf806101006000396000f3fe6080604052600436106100385760003560e01c8063bc7f3b50146100a4578063f2c9ecd8146100cf578063fe3f9b0e146100fa57610039565b5b6000610043610123565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361007e57600080fd5b3660008037600080366000845af43d6000803e806000811461009f573d6000f35b3d6000fd5b3480156100b057600080fd5b506100b9610123565b6040516100c691906101ec565b60405180910390f35b3480156100db57600080fd5b506100e4610151565b6040516100f19190610220565b60405180910390f35b34801561010657600080fd5b50610121600480360381019061011c919061026c565b61017f565b005b6000807f6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec9050805491505090565b6000807ff648814c67221440671fd7c2de979db4020a9320fb7985ff79ca8e7dced277f89050805491505090565b60007f6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec90508181555050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101d6826101ab565b9050919050565b6101e6816101cb565b82525050565b600060208201905061020160008301846101dd565b92915050565b6000819050919050565b61021a81610207565b82525050565b60006020820190506102356000830184610211565b92915050565b600080fd5b610249816101cb565b811461025457600080fd5b50565b60008135905061026681610240565b92915050565b6000602082840312156102825761028161023b565b5b600061029084828501610257565b9150509291505056fea26469706673582212204d8423e4dca486c2c73aacbe43202ca17b2b3e52651c28d12e69a0903e91622f64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3CF CODESIZE SUB DUP1 PUSH2 0x3CF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6FDCB8FFF5EF717A847D344B0A6AE7BE40A2656CCE2C3881DD009FC855B9D1EC SWAP1 POP DUP2 DUP2 SSTORE POP POP PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91 DUP3 PUSH2 0x66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1 DUP2 PUSH2 0x86 JUMP JUMPDEST DUP2 EQ PUSH2 0xAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBE DUP2 PUSH2 0x98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDA JUMPI PUSH2 0xD9 PUSH2 0x61 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE8 DUP5 DUP3 DUP6 ADD PUSH2 0xAF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CF DUP1 PUSH2 0x100 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC7F3B50 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0xF2C9ECD8 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0xFE3F9B0E EQ PUSH2 0xFA JUMPI PUSH2 0x39 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43 PUSH2 0x123 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9F JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB9 PUSH2 0x123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x17F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x6FDCB8FFF5EF717A847D344B0A6AE7BE40A2656CCE2C3881DD009FC855B9D1EC SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF648814C67221440671FD7C2DE979DB4020A9320FB7985FF79CA8E7DCED277F8 SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6FDCB8FFF5EF717A847D344B0A6AE7BE40A2656CCE2C3881DD009FC855B9D1EC SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6 DUP3 PUSH2 0x1AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E6 DUP2 PUSH2 0x1CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x201 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21A DUP2 PUSH2 0x207 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x235 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x211 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x249 DUP2 PUSH2 0x1CB JUMP JUMPDEST DUP2 EQ PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x266 DUP2 PUSH2 0x240 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x282 JUMPI PUSH2 0x281 PUSH2 0x23B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x290 DUP5 DUP3 DUP6 ADD PUSH2 0x257 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D DUP5 0x23 0xE4 0xDC LOG4 DUP7 0xC2 0xC7 GASPRICE 0xAC 0xBE NUMBER KECCAK256 0x2C LOG1 PUSH28 0x2B3E52651C28D12E69A0903E91622F64736F6C634300081200330000 ",
							"sourceMap": "257:1771:0:-:0;;;356:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;396:16;415:21;396:40;;490:9;480:8;473:27;459:42;356:151;257:1771;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;257:1771:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_72": {
									"entryPoint": null,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getDelegate_40": {
									"entryPoint": 291,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getNumber_27": {
									"entryPoint": 337,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@updateDelegate_53": {
									"entryPoint": 383,
									"id": 53,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1960:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "638:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "648:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "659:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "620:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "630:7:1",
														"type": ""
													}
												],
												"src": "593:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "729:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "736:3:1",
														"type": ""
													}
												],
												"src": "676:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "870:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "882:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "893:4:1",
														"type": ""
													}
												],
												"src": "800:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1061:6:1",
														"type": ""
													}
												],
												"src": "1028:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1198:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1321:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1455:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:43:1"
															},
															"nodeType": "YulIf",
															"src": "1408:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1391:5:1",
														"type": ""
													}
												],
												"src": "1355:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1535:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1545:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1554:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1545:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1610:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1583:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1583:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1513:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1521:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1529:5:1",
														"type": ""
													}
												],
												"src": "1483:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1694:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1740:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1742:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1742:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1742:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1715:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1724:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1711:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1707:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1707:32:1"
															},
															"nodeType": "YulIf",
															"src": "1704:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1833:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1848:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1852:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1877:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1912:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1923:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1908:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1908:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1932:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1887:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1887:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1877:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1664:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1675:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1687:6:1",
														"type": ""
													}
												],
												"src": "1628:329:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100385760003560e01c8063bc7f3b50146100a4578063f2c9ecd8146100cf578063fe3f9b0e146100fa57610039565b5b6000610043610123565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361007e57600080fd5b3660008037600080366000845af43d6000803e806000811461009f573d6000f35b3d6000fd5b3480156100b057600080fd5b506100b9610123565b6040516100c691906101ec565b60405180910390f35b3480156100db57600080fd5b506100e4610151565b6040516100f19190610220565b60405180910390f35b34801561010657600080fd5b50610121600480360381019061011c919061026c565b61017f565b005b6000807f6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec9050805491505090565b6000807ff648814c67221440671fd7c2de979db4020a9320fb7985ff79ca8e7dced277f89050805491505090565b60007f6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec90508181555050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101d6826101ab565b9050919050565b6101e6816101cb565b82525050565b600060208201905061020160008301846101dd565b92915050565b6000819050919050565b61021a81610207565b82525050565b60006020820190506102356000830184610211565b92915050565b600080fd5b610249816101cb565b811461025457600080fd5b50565b60008135905061026681610240565b92915050565b6000602082840312156102825761028161023b565b5b600061029084828501610257565b9150509291505056fea26469706673582212204d8423e4dca486c2c73aacbe43202ca17b2b3e52651c28d12e69a0903e91622f64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC7F3B50 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0xF2C9ECD8 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0xFE3F9B0E EQ PUSH2 0xFA JUMPI PUSH2 0x39 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43 PUSH2 0x123 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9F JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB9 PUSH2 0x123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x17F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x6FDCB8FFF5EF717A847D344B0A6AE7BE40A2656CCE2C3881DD009FC855B9D1EC SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF648814C67221440671FD7C2DE979DB4020A9320FB7985FF79CA8E7DCED277F8 SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6FDCB8FFF5EF717A847D344B0A6AE7BE40A2656CCE2C3881DD009FC855B9D1EC SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6 DUP3 PUSH2 0x1AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E6 DUP2 PUSH2 0x1CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x201 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21A DUP2 PUSH2 0x207 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x235 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x211 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x249 DUP2 PUSH2 0x1CB JUMP JUMPDEST DUP2 EQ PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x266 DUP2 PUSH2 0x240 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x282 JUMPI PUSH2 0x281 PUSH2 0x23B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x290 DUP5 DUP3 DUP6 ADD PUSH2 0x257 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D DUP5 0x23 0xE4 0xDC LOG4 DUP7 0xC2 0xC7 GASPRICE 0xAC 0xBE NUMBER KECCAK256 0x2C LOG1 PUSH28 0x2B3E52651C28D12E69A0903E91622F64736F6C634300081200330000 ",
							"sourceMap": "257:1771:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1264:17;1284:13;:11;:13::i;:::-;1264:33;;1336:1;1315:23;;:9;:23;;;1307:32;;;;;;1553:14;1548:3;1543;1530:38;1718:3;1713;1697:14;1692:3;1681:9;1674:5;1661:61;1796:16;1791:3;1786;1771:42;1900:6;1924:1;1919:38;;;;1992:16;1987:3;1979:30;1919:38;1939:16;1934:3;1927:29;789:180;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;565:166;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;976:177;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;789:180;832:16;859;878:21;859:40;;946:8;940:15;928:27;;918:45;789:180;:::o;565:166::-;606:11;628:16;647:19;628:38;;708:8;702:15;695:22;;685:40;565:166;:::o;976:177::-;1035:16;1054:21;1035:40;;1129:9;1119:8;1112:27;1098:42;976:177;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:139::-;1529:5;1567:6;1554:20;1545:29;;1583:33;1610:5;1583:33;:::i;:::-;1483:139;;;;:::o;1628:329::-;1687:6;1736:2;1724:9;1715:7;1711:23;1707:32;1704:119;;;1742:79;;:::i;:::-;1704:119;1862:1;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1833:117;1628:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "143800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"getDelegate()": "2477",
								"getNumber()": "2450",
								"updateDelegate(address)": "22596"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 257,
									"end": 2028,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 257,
									"end": 2028,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 257,
									"end": 2028,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 356,
									"end": 507,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 356,
									"end": 507,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 356,
									"end": 507,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 356,
									"end": 507,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 356,
									"end": 507,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 356,
									"end": 507,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 356,
									"end": 507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 356,
									"end": 507,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 396,
									"end": 412,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 436,
									"name": "PUSH",
									"source": 0,
									"value": "6FDCB8FFF5EF717A847D344B0A6AE7BE40A2656CCE2C3881DD009FC855B9D1EC"
								},
								{
									"begin": 396,
									"end": 436,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 396,
									"end": 436,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 490,
									"end": 499,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 480,
									"end": 488,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 473,
									"end": 500,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 459,
									"end": 501,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 356,
									"end": 507,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 257,
									"end": 2028,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 257,
									"end": 2028,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 257,
									"end": 2028,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 257,
									"end": 2028,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 257,
									"end": 2028,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 257,
									"end": 2028,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 257,
									"end": 2028,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 257,
									"end": 2028,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 2028,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 257,
									"end": 2028,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 2028,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d8423e4dca486c2c73aacbe43202ca17b2b3e52651c28d12e69a0903e91622f64736f6c63430008120033",
									".code": [
										{
											"begin": 257,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "BC7F3B50"
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "F2C9ECD8"
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FE3F9B0E"
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 257,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1284,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1284,
											"end": 1297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1284,
											"end": 1297,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1284,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1307,
											"end": 1339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1339,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1307,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1567,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1548,
											"end": 1551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1568,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1711,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1690,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1674,
											"end": 1679,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1722,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1813,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1957,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1919,
											"end": 1957,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2008,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 1990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 2009,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1957,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1919,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1955,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1927,
											"end": 1956,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 789,
											"end": 969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 789,
											"end": 969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 789,
											"end": 969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 789,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 789,
											"end": 969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 789,
											"end": 969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 789,
											"end": 969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 789,
											"end": 969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 789,
											"end": 969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 789,
											"end": 969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 789,
											"end": 969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 565,
											"end": 731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 565,
											"end": 731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 565,
											"end": 731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 565,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 565,
											"end": 731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 565,
											"end": 731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 565,
											"end": 731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 976,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 976,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 789,
											"end": 969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 832,
											"end": 848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 878,
											"end": 899,
											"name": "PUSH",
											"source": 0,
											"value": "6FDCB8FFF5EF717A847D344B0A6AE7BE40A2656CCE2C3881DD009FC855B9D1EC"
										},
										{
											"begin": 859,
											"end": 899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 859,
											"end": 899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 946,
											"end": 954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 928,
											"end": 955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 928,
											"end": 955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 918,
											"end": 963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 789,
											"end": 969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 565,
											"end": 731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 606,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 647,
											"end": 666,
											"name": "PUSH",
											"source": 0,
											"value": "F648814C67221440671FD7C2DE979DB4020A9320FB7985FF79CA8E7DCED277F8"
										},
										{
											"begin": 628,
											"end": 666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 708,
											"end": 716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 702,
											"end": 717,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 695,
											"end": 717,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 695,
											"end": 717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 685,
											"end": 725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1054,
											"end": 1075,
											"name": "PUSH",
											"source": 0,
											"value": "6FDCB8FFF5EF717A847D344B0A6AE7BE40A2656CCE2C3881DD009FC855B9D1EC"
										},
										{
											"begin": 1035,
											"end": 1075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1139,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1428,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1583,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1734,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1739,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1742,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1912,
											"end": 1921,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 1930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1887,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getDelegate()": "bc7f3b50",
							"getNumber()": "f2c9ecd8",
							"updateDelegate(address)": "fe3f9b0e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"getDelegate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"updateDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":\"ProxyPattern\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\":{\"keccak256\":\"0x0a9807492229da1b7822b2c47d84743b1ff05545ba5907cd06d23190e9ecd77e\",\"urls\":[\"bzz-raw://7d0f77e805728cfced5221ee1405b8d3be45313f8786fcca52aefe421cfe8637\",\"dweb:/ipfs/QmZBacSEp1QpSsXANN9bMoW4HCXSNE6DG2gLKK6MKGmT3d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n --> Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol:7:1:\n  |\n7 | contract ProxyPattern{\n  | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n  --> Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol:42:5:\n   |\n42 |     fallback() external payable{\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 2026,
						"file": "Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol",
						"message": "The payable fallback function is defined here.",
						"start": 1183
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 2028,
					"file": "Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol",
					"start": 257
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol": {
				"ast": {
					"absolutePath": "Seminar DevOps (1)/contracts/contracts/ProxyStorage/ProxyPattern.sol",
					"exportedSymbols": {
						"ProxyPattern": [
							73
						]
					},
					"id": 74,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "1:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ProxyPattern",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "ProxyPattern",
							"nameLocation": "266:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "386:121:0",
										"statements": [
											{
												"assignments": [
													7
												],
												"declarations": [
													{
														"constant": false,
														"id": 7,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "404:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 13,
														"src": "396:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 6,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "396:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 11,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "64656c6567617465",
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "425:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec",
																"typeString": "literal_string \"delegate\""
															},
															"value": "delegate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec",
																"typeString": "literal_string \"delegate\""
															}
														],
														"id": 8,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "415:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "415:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "396:40:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "459:42:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "480:8:0"
																	},
																	{
																		"name": "_delegate",
																		"nodeType": "YulIdentifier",
																		"src": "490:9:0"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:27:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "473:27:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "490:9:0",
														"valueSize": 1
													},
													{
														"declaration": 7,
														"isOffset": false,
														"isSlot": false,
														"src": "480:8:0",
														"valueSize": 1
													}
												],
												"id": 12,
												"nodeType": "InlineAssembly",
												"src": "450:51:0"
											}
										]
									},
									"id": 14,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_delegate",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:19:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "386:0:0"
									},
									"scope": 73,
									"src": "356:151:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "618:113:0",
										"statements": [
											{
												"assignments": [
													20
												],
												"declarations": [
													{
														"constant": false,
														"id": 20,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "636:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 26,
														"src": "628:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 19,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "628:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 24,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "6e756d626572",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "657:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f648814c67221440671fd7c2de979db4020a9320fb7985ff79ca8e7dced277f8",
																"typeString": "literal_string \"number\""
															},
															"value": "number"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_f648814c67221440671fd7c2de979db4020a9320fb7985ff79ca8e7dced277f8",
																"typeString": "literal_string \"number\""
															}
														],
														"id": 21,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "647:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "647:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "628:38:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "685:40:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "695:22:0",
															"value": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "708:8:0"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "702:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:15:0"
															},
															"variableNames": [
																{
																	"name": "num",
																	"nodeType": "YulIdentifier",
																	"src": "695:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "695:3:0",
														"valueSize": 1
													},
													{
														"declaration": 20,
														"isOffset": false,
														"isSlot": false,
														"src": "708:8:0",
														"valueSize": 1
													}
												],
												"id": 25,
												"nodeType": "InlineAssembly",
												"src": "676:49:0"
											}
										]
									},
									"functionSelector": "f2c9ecd8",
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumber",
									"nameLocation": "574:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "583:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "614:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "606:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:13:0"
									},
									"scope": 73,
									"src": "565:166:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "849:120:0",
										"statements": [
											{
												"assignments": [
													33
												],
												"declarations": [
													{
														"constant": false,
														"id": 33,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "867:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 39,
														"src": "859:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 32,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "859:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 37,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "64656c6567617465",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "888:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec",
																"typeString": "literal_string \"delegate\""
															},
															"value": "delegate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec",
																"typeString": "literal_string \"delegate\""
															}
														],
														"id": 34,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "878:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "878:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:40:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "918:45:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "928:27:0",
															"value": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "946:8:0"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "940:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "940:15:0"
															},
															"variableNames": [
																{
																	"name": "delegate",
																	"nodeType": "YulIdentifier",
																	"src": "928:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 30,
														"isOffset": false,
														"isSlot": false,
														"src": "928:8:0",
														"valueSize": 1
													},
													{
														"declaration": 33,
														"isOffset": false,
														"isSlot": false,
														"src": "946:8:0",
														"valueSize": 1
													}
												],
												"id": 38,
												"nodeType": "InlineAssembly",
												"src": "909:54:0"
											}
										]
									},
									"functionSelector": "bc7f3b50",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDelegate",
									"nameLocation": "798:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "840:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "832:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "832:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "831:18:0"
									},
									"scope": 73,
									"src": "789:180:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "1025:128:0",
										"statements": [
											{
												"assignments": [
													46
												],
												"declarations": [
													{
														"constant": false,
														"id": 46,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "1043:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "1035:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 45,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1035:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 50,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "64656c6567617465",
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1064:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec",
																"typeString": "literal_string \"delegate\""
															},
															"value": "delegate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec",
																"typeString": "literal_string \"delegate\""
															}
														],
														"id": 47,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1054:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1054:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1035:40:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1098:42:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "1119:8:0"
																	},
																	{
																		"name": "_delegate",
																		"nodeType": "YulIdentifier",
																		"src": "1129:9:0"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "1112:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1112:27:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1112:27:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": false,
														"src": "1129:9:0",
														"valueSize": 1
													},
													{
														"declaration": 46,
														"isOffset": false,
														"isSlot": false,
														"src": "1119:8:0",
														"valueSize": 1
													}
												],
												"id": 51,
												"nodeType": "InlineAssembly",
												"src": "1089:51:0"
											}
										]
									},
									"functionSelector": "fe3f9b0e",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateDelegate",
									"nameLocation": "985:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "_delegate",
												"nameLocation": "1008:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1000:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:19:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:0:0"
									},
									"scope": 73,
									"src": "976:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1210:816:0",
										"statements": [
											{
												"assignments": [
													57
												],
												"declarations": [
													{
														"constant": false,
														"id": 57,
														"mutability": "mutable",
														"name": "_delegate",
														"nameLocation": "1272:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 71,
														"src": "1264:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 56,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1264:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 60,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 58,
														"name": "getDelegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "1284:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1284:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1264:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 62,
																"name": "_delegate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 57,
																"src": "1315:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 65,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1336:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1328:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 63,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1328:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1328:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1315:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 61,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1307:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1307:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "1307:32:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1447:573:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1543:3:0",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1548:3:0",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1553:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1553:14:0"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1530:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1530:38:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1530:38:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1647:75:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1674:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:5:0"
																	},
																	{
																		"name": "_delegate",
																		"nodeType": "YulIdentifier",
																		"src": "1681:9:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1692:3:0",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1697:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:14:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1713:3:0",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1718:3:0",
																		"type": "",
																		"value": "0x0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "1661:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1661:61:0"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "1651:6:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1786:3:0",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1791:3:0",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1796:14:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1796:16:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1771:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1771:42:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1771:42:0"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1926:31:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1934:3:0",
																							"type": "",
																							"value": "0x0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1939:14:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1939:16:0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1927:29:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1927:29:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1919:38:0",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1924:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1978:32:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1987:3:0",
																							"type": "",
																							"value": "0x0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1992:14:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1992:16:0"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "1979:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1979:30:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1979:30:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1970:40:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "1900:6:0"
															},
															"nodeType": "YulSwitch",
															"src": "1893:117:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 57,
														"isOffset": false,
														"isSlot": false,
														"src": "1681:9:0",
														"valueSize": 1
													}
												],
												"id": 70,
												"nodeType": "InlineAssembly",
												"src": "1438:582:0"
											}
										]
									},
									"id": 72,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1191:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1210:0:0"
									},
									"scope": 73,
									"src": "1183:843:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 74,
							"src": "257:1771:0",
							"usedErrors": []
						}
					],
					"src": "1:2027:0"
				},
				"id": 0
			}
		}
	}
}